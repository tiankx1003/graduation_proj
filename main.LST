C51 COMPILER V9.00   MAIN                                                                  06/02/2017 09:21:36 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

*** WARNING C500 IN LINE 1 OF MAIN.C: LICENSE ERROR (R208: RENEW LICENSE ID CODE (LIC))

   1          /*******************************************************************************
   2          * 实验名                           :LCD显示实验
   3          * 使用的IO           : 
   4          * 实验效果       :1602显示温度、阻值
   5          *  注意              ：reg51.h和reg52.h的使用
   6          *******************************************************************************/
   7          
   8          #include<reg51.h>
   9          #include"lcd.h"
  10          #include"temp.h"
  11          #include"XPT2046.h"
  12          //#include"studio.h"
  13          
  14          
  15          typedef unsigned int u16;         //对数据类型进行声明定义
  16          typedef unsigned char u8;
  17          
  18          sbit LSA=P2^2;
  19          sbit LSB=P2^3;
  20          sbit LSC=P2^4;
  21          sbit beep=P1^5;
  22          //sbit moto=P1^0;
  23          
  24          uchar CNCHAR[6] = "摄氏度";
  25          void LcdDisplay();
  26          void delay(u16 i);
  27          void beepY();
  28          void Dimension();
  29          
  30          /*******************************************************************************
  31          * 函 数 名         : delay
  32          * 函数功能                 : 延时函数，i=1时，大约延时10us
  33          *******************************************************************************/
  34          void delay(u16 i)
  35          {
  36   1              while(i--);     
  37   1      }
  38          
  39          
  40          /*******************************************************************************
  41          * 函 数 名         : beepY
  42          * 函数功能                 : 蜂鸣器发声
  43          *******************************************************************************/
  44          void beepY()
  45          {
  46   1              u8 i;
  47   1              for(i=0;i<100;i++)
  48   1              {
  49   2              beep=~beep;
  50   2              delay(90);
  51   2              }
  52   1              beep=0;
  53   1              delay(1000);    
  54   1      }
C51 COMPILER V9.00   MAIN                                                                  06/02/2017 09:21:36 PAGE 2   

  55          
  56          
  57          /*******************************************************************************
  58          * 函数名         : LcdDisplay()
  59          * 函数功能                 : LCD显示读取到的温度
  60          * 输入           : v
  61          * 输出           : 无
  62          *******************************************************************************/
  63          void LcdDisplay()        //lcd显示
  64          {
  65   1          int temp;
  66   1              u16 temp1;
  67   1              unsigned char datas[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0}; //定义数组
  68   1              float tp;  
  69   1              u16 ADC,ADC1;
  70   1              static u8 i;
  71   1              temp=Ds18b20ReadTemp();         
  72   1                      LcdWriteCom(0x80+0x40);         //写地址 80表示初始地址
  73   1                  LcdWriteData('+');          //显示正
  74   1                      SBUF='+';//将接收到的数据放入到发送寄存器
  75   1                      while(!TI);                              //等待发送数据完成
  76   1                      TI=0;                                            //清除发送完成标志位
  77   1                      tp=temp;//因为数据处理有小数点所以将温度赋给一个浮点型变量
  78   1                      //如果温度是正的那么，那么正数的原码就是补码它本身
  79   1                      temp=tp*0.0625*100+0.5; 
  80   1                      //留两个小数点就*100，+0.5是四舍五入，因为C语言浮点数转换为整型的时候把小数点
  81   1                      //后面的数自动去掉，不管是否大于0.5，而+0.5之后大于0.5的就是进1了，小于0.5的就
  82   1                      //算加上0.5，还是在小数点后面。
  83   1                      ADC1 = Read_AD_Data(0x94);              //   AIN0 电位器
  84   1      //              ADC = ADC1*0.75;
  85   1      
  86   1      //              temp1 = Read_AD_Data(0xE4);             //   AIN3 外部输入
  87   1      
  88   1              if(i==3)
  89   1              {
  90   2                      i=0;
  91   2                      temp1 = Read_AD_Data(0xE4);             //   AIN3 外部输入
  92   2      //              temp1 = temp1-1250;
  93   2      //              temp1 = temp1/6.21;
  94   2                      ADC = ADC1*0.75;
  95   2                      if(temp1>=1200)
  96   2              {
  97   3                 LcdWriteCom(0x8C+0x40);               //写地址 80表示初始地址
  98   3                 LcdWriteData('+'); //显示小数第一位
  99   3                 temp1 = temp1-1200;
 100   3                 temp1 = temp1/6.21-3;
 101   3              }
 102   2              else
 103   2              {
 104   3                      LcdWriteCom(0x8C+0x40);          //写地址 80表示初始地址
 105   3                  LcdWriteData('-'); //显示小数第一位
 106   3                      temp1 = temp1-1033;
 107   3                      temp1 = temp1/3.7;
 108   3                      temp1 = temp1+45-3;
 109   3                      if(temp1>100) temp1 = 45; 
 110   3              }
 111   2              }
 112   1              i++;
 113   1      
 114   1      
 115   1              
 116   1              datas[0] = temp / 10000;                          //百位
C51 COMPILER V9.00   MAIN                                                                  06/02/2017 09:21:36 PAGE 3   

 117   1              datas[1] = temp % 10000 / 1000;           //十位
 118   1              datas[2] = temp % 1000 / 100;             //个位
 119   1              datas[3] = temp % 100 / 10;
 120   1              datas[4] = temp % 10;
 121   1              datas[5] = ADC / 1000;            //百位
 122   1              datas[6] = ADC % 1000 / 100;              //十位
 123   1              datas[7] = ADC % 100 / 10;                        //个位
 124   1              datas[8] = ADC % 10;                             //小数点后一位
 125   1              datas[9] = temp1/1000;//千位
 126   1              datas[10] = temp1%1000/100;//百位
 127   1              datas[11] = temp1%1000%100/10;//十位
 128   1              datas[12] = temp1%1000%100%10;//个位
 129   1      
 130   1      /*第一行显示温度值*/
 131   1              LcdWriteCom(0x81+0x40);           //写地址 80表示初始地址
 132   1              LcdWriteData('0'+datas[0]); //百位 
 133   1              
 134   1              LcdWriteCom(0x82+0x40);          //写地址 80表示初始地址
 135   1              LcdWriteData('0'+datas[1]); //十位
 136   1      
 137   1              LcdWriteCom(0x83+0x40);         //写地址 80表示初始地址
 138   1              LcdWriteData('0'+datas[2]); //个位 
 139   1      
 140   1              LcdWriteCom(0x84+0x40);         //写地址 80表示初始地址
 141   1              LcdWriteData('.');              //显示 ‘.’
 142   1      
 143   1              LcdWriteCom(0x85+0x40);          //写地址 80表示初始地址
 144   1              LcdWriteData('0'+datas[3]); //显示小数第一位  
 145   1      
 146   1      /*第二行显示电阻值*/
 147   1              LcdWriteCom(0x81);                //写地址 80表示初始地址
 148   1              LcdWriteData('0'+datas[5]); //百位 
 149   1                      
 150   1              LcdWriteCom(0x82);               //写地址 80表示初始地址
 151   1              LcdWriteData('0'+datas[6]); //十位
 152   1      
 153   1              LcdWriteCom(0x83);              //写地址 80表示初始地址
 154   1              LcdWriteData('0'+datas[7]); //个位 
 155   1      
 156   1              LcdWriteCom(0x84);              //写地址 80表示初始地址
 157   1              LcdWriteData('.');              //显示 ‘.’
 158   1      
 159   1              LcdWriteCom(0x85);               //写地址 80表示初始地址
 160   1              LcdWriteData('0'+datas[8]); //显示小数第一位  
 161   1      
 162   1      
 163   1      /*右侧显示仰俯角*/
 164   1      //      LcdWriteCom(0x8C+0x40);           //写地址 80表示初始地址
 165   1      //      LcdWriteData('0'+datas[9]); //显示千位
 166   1              
 167   1              LcdWriteCom(0x8D+0x40);          //写地址 80表示初始地址
 168   1              LcdWriteData('0'+datas[10]); //显示百位
 169   1      
 170   1              LcdWriteCom(0x8E+0x40);         //写地址 80表示初始地址
 171   1              LcdWriteData('0'+datas[11]); //显示十位 
 172   1      
 173   1              LcdWriteCom(0x8F+0x40);         //写地址 80表示初始地址
 174   1              LcdWriteData('0'+datas[12]); //显示个位
 175   1      
 176   1      
 177   1               
 178   1      }
C51 COMPILER V9.00   MAIN                                                                  06/02/2017 09:21:36 PAGE 4   

 179          
 180          
 181          
 182          /*******************************************************************************
 183          * 函 数 名         :Dimension()
 184          * 函数功能                 :单位显示
 185          * 输    入         : 无
 186          * 输    出         : 无
 187          *******************************************************************************/
 188          void Dimension()
 189          {
 190   1              LcdWriteCom(0x87+0x40); //写地址 80表示初始地址
 191   1              LcdWriteData('C');
 192   1              LcdWriteCom(0x8D);      
 193   1              LcdWriteData('X');      
 194   1              LcdWriteCom(0x8E);
 195   1              LcdWriteData('-');      
 196   1              LcdWriteCom(0x8F);      
 197   1              LcdWriteData('Z');       
 198   1              LcdWriteCom(0x87);      
 199   1              LcdWriteData('P');
 200   1              LcdWriteCom(0x88);      
 201   1              LcdWriteData('P');
 202   1              LcdWriteCom(0x89);      
 203   1              LcdWriteData('M');
 204   1      }
 205          
 206          /*******************************************************************************
 207          * 函数名         : main
 208          * 函数功能                 : 主函数
 209          * 输入           : 无
 210          * 输出           : 无
 211          *******************************************************************************/
 212          void main()
 213          {
 214   1      
 215   1              u16 adc,adc1;
 216   1              int i=0;
 217   1              LcdInit();                       //初始化LCD1602
 218   1              Dimension();
 219   1      //      moto=0;                 //关闭电机
 220   1      /*      for(i=0;i<100;i++)        //循环100次，也就是大约5S
 221   1              {
 222   1                      moto=1;                  //开启电机
 223   1                      delay(5000);    //大约延时50ms
 224   1              }
 225   1              moto=0;                 //关闭电机 */
 226   1              while(1)
 227   1              {
 228   2                      adc1=Read_AD_Data(0x94);
 229   2                  adc=adc1*0.75;
 230   2                      LcdDisplay();
 231   2      //              moto=0;
 232   2                      if(adc>=2000)   
 233   2                      {
 234   3                      beepY(); 
 235   3      //      moto=1;
 236   3                      i++;
 237   3                      }
 238   2              }                 
 239   1      }                               

C51 COMPILER V9.00   MAIN                                                                  06/02/2017 09:21:36 PAGE 5   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    899    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7      32
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
